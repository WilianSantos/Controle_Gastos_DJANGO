[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http.response",
        "description": "django.http.response",
        "isExtraImport": true,
        "detail": "django.http.response",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http.response",
        "description": "django.http.response",
        "isExtraImport": true,
        "detail": "django.http.response",
        "documentation": {}
    },
    {
        "label": "sha256",
        "importPath": "hashlib",
        "description": "hashlib",
        "isExtraImport": true,
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "mean",
        "importPath": "statistics",
        "description": "statistics",
        "isExtraImport": true,
        "detail": "statistics",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "isExtraImport": true,
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0001_initial",
        "description": "app_core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Usuario',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('nome', models.CharField(max_length=50, verbose_name='Nome')),",
        "detail": "app_core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0002_rename_renda_rendas_and_more",
        "description": "app_core.migrations.0002_rename_renda_rendas_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='Renda',\n            new_name='Rendas',\n        ),\n        migrations.RenameField(",
        "detail": "app_core.migrations.0002_rename_renda_rendas_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0003_alter_gastos_options_alter_rendas_options_and_more",
        "description": "app_core.migrations.0003_alter_gastos_options_alter_rendas_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0002_rename_renda_rendas_and_more'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='gastos',\n            options={'verbose_name': 'Gasto', 'verbose_name_plural': 'Gastos'},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "app_core.migrations.0003_alter_gastos_options_alter_rendas_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0004_remove_usuario_ativo",
        "description": "app_core.migrations.0004_remove_usuario_ativo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0003_alter_gastos_options_alter_rendas_options_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='usuario',\n            name='ativo',\n        ),\n    ]",
        "detail": "app_core.migrations.0004_remove_usuario_ativo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0005_alter_gastos_data_alter_gastos_gasto_and_more",
        "description": "app_core.migrations.0005_alter_gastos_data_alter_gastos_gasto_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0004_remove_usuario_ativo'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 24, 35, 632241)),\n        ),",
        "detail": "app_core.migrations.0005_alter_gastos_data_alter_gastos_gasto_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0006_alter_gastos_data",
        "description": "app_core.migrations.0006_alter_gastos_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0005_alter_gastos_data_alter_gastos_gasto_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 27, 57, 555285)),\n        ),",
        "detail": "app_core.migrations.0006_alter_gastos_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0007_alter_gastos_data_alter_rendas_data_and_more",
        "description": "app_core.migrations.0007_alter_gastos_data_alter_rendas_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0006_alter_gastos_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 29, 30, 251184)),\n        ),",
        "detail": "app_core.migrations.0007_alter_gastos_data_alter_rendas_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0008_alter_gastos_data_alter_rendas_data_and_more",
        "description": "app_core.migrations.0008_alter_gastos_data_alter_rendas_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0007_alter_gastos_data_alter_rendas_data_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 31, 32, 987534)),\n        ),",
        "detail": "app_core.migrations.0008_alter_gastos_data_alter_rendas_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0009_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0009_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0008_alter_gastos_data_alter_rendas_data_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 34, 57, 825281)),\n        ),",
        "detail": "app_core.migrations.0009_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0010_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0010_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0009_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 36, 39, 526635)),\n        ),",
        "detail": "app_core.migrations.0010_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0011_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0011_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0010_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 18, 38, 11, 258585)),\n        ),",
        "detail": "app_core.migrations.0011_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0012_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0012_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0011_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateTimeField(default=datetime.datetime(2023, 4, 21, 19, 39, 3, 100562)),\n        ),",
        "detail": "app_core.migrations.0012_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0013_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0013_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0012_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 12, 21, 40, 956016)),\n        ),",
        "detail": "app_core.migrations.0013_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0014_alter_gastos_data_alter_rendas_data_and_more",
        "description": "app_core.migrations.0014_alter_gastos_data_alter_rendas_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0013_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 13, 15, 47, 997070)),\n        ),",
        "detail": "app_core.migrations.0014_alter_gastos_data_alter_rendas_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0015_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0015_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0014_alter_gastos_data_alter_rendas_data_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 16, 19, 58, 778454, tzinfo=datetime.timezone.utc)),\n        ),",
        "detail": "app_core.migrations.0015_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0016_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0016_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0015_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 16, 22, 32, 336835, tzinfo=datetime.timezone.utc)),\n        ),",
        "detail": "app_core.migrations.0016_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0017_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0017_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0016_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 13, 26, 35, 9991)),\n        ),",
        "detail": "app_core.migrations.0017_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0018_alter_gastos_data_alter_rendas_data",
        "description": "app_core.migrations.0018_alter_gastos_data_alter_rendas_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0017_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 13, 32, 58, 721349)),\n        ),",
        "detail": "app_core.migrations.0018_alter_gastos_data_alter_rendas_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0019_alter_gastos_data_alter_rendas_data_and_more",
        "description": "app_core.migrations.0019_alter_gastos_data_alter_rendas_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0018_alter_gastos_data_alter_rendas_data'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gastos',\n            name='data',\n            field=models.DateField(default=datetime.datetime(2023, 4, 22, 13, 33, 18, 763779)),\n        ),",
        "detail": "app_core.migrations.0019_alter_gastos_data_alter_rendas_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app_core.migrations.0020_remove_usuario_renda_total_alter_gastos_data_and_more",
        "description": "app_core.migrations.0020_remove_usuario_renda_total_alter_gastos_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app_core', '0019_alter_gastos_data_alter_rendas_data_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='usuario',\n            name='renda_total',\n        ),\n        migrations.AlterField(",
        "detail": "app_core.migrations.0020_remove_usuario_renda_total_alter_gastos_data_and_more",
        "documentation": {}
    },
    {
        "label": "AppCoreConfig",
        "kind": 6,
        "importPath": "app_core.apps",
        "description": "app_core.apps",
        "peekOfCode": "class AppCoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app_core'",
        "detail": "app_core.apps",
        "documentation": {}
    },
    {
        "label": "AdicionarRenda",
        "kind": 6,
        "importPath": "app_core.forms",
        "description": "app_core.forms",
        "peekOfCode": "class AdicionarRenda(forms.ModelForm):\n    class Meta:\n        model = Rendas\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['usuario'].widget = forms.HiddenInput()\nclass AdicionarGasto(forms.ModelForm):\n    class Meta:\n        model = Gastos",
        "detail": "app_core.forms",
        "documentation": {}
    },
    {
        "label": "AdicionarGasto",
        "kind": 6,
        "importPath": "app_core.forms",
        "description": "app_core.forms",
        "peekOfCode": "class AdicionarGasto(forms.ModelForm):\n    class Meta:\n        model = Gastos\n        fields = '__all__'\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['usuario'].widget = forms.HiddenInput()",
        "detail": "app_core.forms",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "kind": 6,
        "importPath": "app_core.models",
        "description": "app_core.models",
        "peekOfCode": "class Usuario(models.Model):\n    nome = models.CharField(max_length=50)\n    email = models.EmailField()\n    senha = models.CharField(max_length=60)\n    def __str__(self):\n        return self.nome\n    class Meta:\n        verbose_name = 'Usuario'\n        verbose_name_plural = 'Usuarios'\nclass Rendas(models.Model):",
        "detail": "app_core.models",
        "documentation": {}
    },
    {
        "label": "Rendas",
        "kind": 6,
        "importPath": "app_core.models",
        "description": "app_core.models",
        "peekOfCode": "class Rendas(models.Model):\n    renda_principal = models.FloatField()\n    renda_secundaria = models.FloatField(default=0)\n    data = models.DateField(default=datetime.today())\n    usuario = models.ForeignKey(Usuario, on_delete=models.CASCADE)\n    def __str__(self):\n        return str(self.renda_principal)\n    class Meta:\n        verbose_name = 'Renda'\n        verbose_name_plural = 'Rendas'",
        "detail": "app_core.models",
        "documentation": {}
    },
    {
        "label": "Gastos",
        "kind": 6,
        "importPath": "app_core.models",
        "description": "app_core.models",
        "peekOfCode": "class Gastos(models.Model):\n    gasto = models.CharField(max_length=80)\n    valor = models.FloatField()\n    data = models.DateField(default=datetime.today())\n    usuario = models.ForeignKey(Usuario, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.gasto\n    class Meta:\n        verbose_name = 'Gasto'\n        verbose_name_plural = 'Gastos'",
        "detail": "app_core.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app_core.urls",
        "description": "app_core.urls",
        "peekOfCode": "urlpatterns = [\n    path('index/', views.index, name='index'),\n    path('', views.login, name='login'),\n    path('validar_login', views.validar_login, name='validar_login'),\n    path('registrar/', views.registrar, name='registrar'),\n    path('validar_registrar', views.validar_registrar, name='validar_registrar'),\n    path('adicionar_renda', views.adicionar_renda, name='adicionar_renda'),\n    path('ver_renda/<int:id>', views.ver_renda, name='ver_renda'),\n    path('alterar_renda', views.alterar_renda, name='alterar_renda'),\n    path('excluir_renda/<int:id>', views.excluir_renda, name='excluir_renda'),",
        "detail": "app_core.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def index(request):\n    if request.session.get('usuario'):\n        usuario_logado = request.session.get('usuario')\n        usuario = Usuario.objects.get(id=request.session['usuario'])\n        rendas = Rendas.objects.filter(usuario=request.session['usuario'])\n        renda_total = 0\n        for renda in rendas:\n            renda_total += renda.renda_principal\n            renda_total += renda.renda_secundaria\n        form_renda = AdicionarRenda()",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "registrar",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def registrar(request):\n    if request.session.get('usuario'):\n        return redirect('index/')\n    status = request.GET.get('status')\n    return render(request, 'register/register.html', {'status': status})\ndef validar_registrar(request):\n    nome = request.POST.get('nome')\n    senha = request.POST.get('senha')\n    confirma_senha = request.POST.get('confirma-senha')\n    email = request.POST.get('email')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "validar_registrar",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def validar_registrar(request):\n    nome = request.POST.get('nome')\n    senha = request.POST.get('senha')\n    confirma_senha = request.POST.get('confirma-senha')\n    email = request.POST.get('email')\n    usuario = Usuario.objects.filter(email=email)\n    if len(nome.strip()) == 0 or len(email.strip()) == 0:\n        return redirect('/registrar/?status=1')\n    if len(senha) < 8:\n        return redirect('/registrar/?status=2')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "login",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def login(request):\n    if request.session.get('usuario'):\n        return redirect('index/')\n    status = request.GET.get('status')\n    return render(request, 'login/login.html', {'status': status})\ndef validar_login(request):\n    email = request.POST.get('email')\n    senha = request.POST.get('senha')\n    senha = sha256(senha.encode()).hexdigest()\n    usuario = Usuario.objects.filter(email=email).filter(senha=senha)",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "validar_login",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def validar_login(request):\n    email = request.POST.get('email')\n    senha = request.POST.get('senha')\n    senha = sha256(senha.encode()).hexdigest()\n    usuario = Usuario.objects.filter(email=email).filter(senha=senha)\n    if len(usuario) == 0:\n        return redirect('/?status=1')\n    elif len(usuario) > 0:\n        request.session['usuario'] = usuario[0].id\n        return redirect('/index/')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "sair",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def sair(request):\n    request.session.flush()\n    return redirect('/')\ndef adicionar_renda(request):\n    if request.method == 'POST':\n        form_renda = AdicionarRenda(request.POST)\n        if form_renda.is_valid:\n            form_renda.save()\n            return redirect('/index/')\n        else:",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "adicionar_renda",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def adicionar_renda(request):\n    if request.method == 'POST':\n        form_renda = AdicionarRenda(request.POST)\n        if form_renda.is_valid:\n            form_renda.save()\n            return redirect('/index/')\n        else:\n            return redirect('/index/')\ndef ver_renda(request, id):\n    if request.session.get('usuario'):",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "ver_renda",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def ver_renda(request, id):\n    if request.session.get('usuario'):\n        renda = Rendas.objects.get(id=id)\n        if request.session.get('usuario') == renda.usuario.id:\n            return render(request, 'forms/form_renda.html', {'renda': renda})\n        else:\n            return HttpResponse('Esta não é uma renda sua')\n    return redirect('/?status=2')\ndef alterar_renda(request):\n    renda_id = request.POST.get('renda_id')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "alterar_renda",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def alterar_renda(request):\n    renda_id = request.POST.get('renda_id')\n    renda_principal = request.POST.get('renda_principal')\n    renda_secundaria = request.POST.get('renda_secundaria')\n    renda = Rendas.objects.get(id=renda_id)\n    if renda.usuario.id == request.session['usuario']:\n        renda.renda_principal = float(renda_principal.replace(',', '.'))\n        renda.renda_secundaria = float(renda_secundaria.replace(',', '.'))\n        renda.save()\n        return redirect('/tabela_renda/')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "excluir_renda",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def excluir_renda(request, id):\n    renda = Rendas.objects.get(id=id).delete()\n    return redirect('/tabela_renda/')\ndef tabela_renda(request):\n    rendas = Rendas.objects.filter(usuario=request.session['usuario'])\n    return render(request, 'tables/table_renda.html', {'rendas': rendas})\ndef adicionar_gasto(request):\n    if request.method == 'POST':\n        form_gasto = AdicionarGasto(request.POST)\n        if form_gasto.is_valid:",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "tabela_renda",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def tabela_renda(request):\n    rendas = Rendas.objects.filter(usuario=request.session['usuario'])\n    return render(request, 'tables/table_renda.html', {'rendas': rendas})\ndef adicionar_gasto(request):\n    if request.method == 'POST':\n        form_gasto = AdicionarGasto(request.POST)\n        if form_gasto.is_valid:\n            form_gasto.save()\n            return redirect('/index/')\n        else:",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "adicionar_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def adicionar_gasto(request):\n    if request.method == 'POST':\n        form_gasto = AdicionarGasto(request.POST)\n        if form_gasto.is_valid:\n            form_gasto.save()\n            return redirect('/index/')\n        else:\n            return redirect('/index/')\ndef ver_gasto(request, id):\n    if request.session.get('usuario'):",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "ver_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def ver_gasto(request, id):\n    if request.session.get('usuario'):\n        gasto = Gastos.objects.get(id=id)\n        if request.session.get('usuario') == gasto.usuario.id:\n            return render(request, 'forms/form_gasto.html', {'gasto': gasto})\n        else:\n            return HttpResponse('Esta não é uma renda sua') \n    else:\n        return redirect('/')\ndef alterar_gasto(request):",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "alterar_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def alterar_gasto(request):\n    gasto_id = request.POST.get('gasto_id')\n    gasto_nome = request.POST.get('gasto_nome')\n    gasto_valor = request.POST.get('gasto_valor')\n    gasto = Gastos.objects.get(id=gasto_id)\n    if gasto.usuario.id == request.session['usuario']:\n        gasto.gasto = gasto_nome\n        gasto.valor = float(gasto_valor.replace(',', '.'))\n        gasto.save()\n        return redirect('/tabela_gasto/')",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "excluir_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def excluir_gasto(request, id):\n    gasto = Gastos.objects.get(id=id).delete()\n    return redirect('/tabela_gasto/')\ndef tabela_gasto(request):\n    gastos = Gastos.objects.filter(usuario=request.session['usuario'])\n    return render(request, 'tables/table_gasto.html', {'gastos': gastos})\ndef graficos(request):\n    return render(request, 'charts/charts.html')\ndef relatorio_gastos(request):\n    x = Gastos.objects.filter(usuario=request.session['usuario'])",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "tabela_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def tabela_gasto(request):\n    gastos = Gastos.objects.filter(usuario=request.session['usuario'])\n    return render(request, 'tables/table_gasto.html', {'gastos': gastos})\ndef graficos(request):\n    return render(request, 'charts/charts.html')\ndef relatorio_gastos(request):\n    x = Gastos.objects.filter(usuario=request.session['usuario'])\n    meses = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\n    data = []\n    labels = []",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "graficos",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def graficos(request):\n    return render(request, 'charts/charts.html')\ndef relatorio_gastos(request):\n    x = Gastos.objects.filter(usuario=request.session['usuario'])\n    meses = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\n    data = []\n    labels = []\n    cont = 0\n    mes = datetime.now().month + 1\n    ano = datetime.now().year",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "relatorio_gastos",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def relatorio_gastos(request):\n    x = Gastos.objects.filter(usuario=request.session['usuario'])\n    meses = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\n    data = []\n    labels = []\n    cont = 0\n    mes = datetime.now().month + 1\n    ano = datetime.now().year\n    for i in range(12): \n        mes -= 1",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "relatorio_rendas",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def relatorio_rendas(request):\n    x = Rendas.objects.filter(usuario=request.session['usuario'])\n    meses = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\n    data = []\n    labels = []\n    cont = 0\n    mes = datetime.now().month + 1\n    ano = datetime.now().year\n    for i in range(12): \n        mes -= 1",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "relatorio_renda_gasto",
        "kind": 2,
        "importPath": "app_core.views",
        "description": "app_core.views",
        "peekOfCode": "def relatorio_renda_gasto(request):\n    rendas = Rendas.objects.filter(usuario=request.session['usuario'])\n    gastos = Gastos.objects.filter(usuario=request.session['usuario'])\n    meses_renda = []\n    meses_gasto = []\n    mes = datetime.now().month + 1\n    ano = datetime.now().year\n    for i in range(12): \n        mes -= 1\n        if mes == 0:",
        "detail": "app_core.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "dashbord_divida_env.Scripts.activate_this",
        "description": "dashbord_divida_env.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "dashbord_divida_env.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dash_divida.asgi",
        "description": "dash_divida.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "dash_divida.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-18^m6ip6vtuz&1aq8x5@6f@wh_)#*15d)6mmx-jejd5rx!w87v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-18^m6ip6vtuz&1aq8x5@6f@wh_)#*15d)6mmx-jejd5rx!w87v'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app_core',",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app_core',\n]\nMIDDLEWARE = [",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'dash_divida.urls'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "ROOT_URLCONF = 'dash_divida.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "WSGI_APPLICATION = 'dash_divida.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES = {",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "DATABASES = {\n    'default': dj_database_url.config()\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-br'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "STATIC_ROOT = Path.joinpath(BASE_DIR, 'staticfiles')\nMEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "MEDIA_URL = 'media/'\nMEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "MEDIA_ROOT = Path.joinpath(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "dash_divida.settings",
        "description": "dash_divida.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = '/'",
        "detail": "dash_divida.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "dash_divida.urls",
        "description": "dash_divida.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('app_core.urls'))\n] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "dash_divida.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "dash_divida.wsgi",
        "description": "dash_divida.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "dash_divida.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'dash_divida.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]